name: CI
on:
  push:
    branches:
      - beta
      - "release/**"
      - test
    paths-ignore:
      - "**/*.md"
      - "_templates"
  pull_request:
    branches:
      - main
      - beta
      - "release/**"
      - test
jobs:
  tests:
    name: Test or Build
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12
      - name: Install dependencies
        run: rm -rf node_modules && yarn install --frozen-lockfile
      - name: Build All Packages
        run: yarn run build
  release:
    needs: tests
    if: ${{ github.event_name == 'push' }}
    name: Release or Prerelease
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12
      - name: Install dependencies
        run: rm -rf node_modules && yarn install --frozen-lockfile
      - name: Ensure access
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          npm whoami
      - name: Config git user
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Release
        if: ${{ ! endsWith(github.ref, 'beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
          GH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          yarn run lerna publish
      - name: Prerelease
        if: ${{ endsWith(github.ref, 'beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
          GH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          yarn run lerna version --conventional-prerelease --yes
          yarn run lerna publish from-package --yes
